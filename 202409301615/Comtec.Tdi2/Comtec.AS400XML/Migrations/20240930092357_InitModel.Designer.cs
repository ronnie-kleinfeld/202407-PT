// <auto-generated />
using System;
using Comtec.AS400XML.DL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Comtec.AS400XML.Migrations
{
    [DbContext(typeof(AS400XmlContext))]
    [Migration("20240930092357_InitModel")]
    partial class InitModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.ArXmlElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FicnXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FtitXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("RclXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("RctXmlElementId")
                        .HasColumnType("int");

                    b.Property<string>("Rx1XmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Rx2XmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Ry1XmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Ry2XmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("RctXmlElementId");

                    b.ToTable("ArXmlElement");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.BXmlElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FXmlElementId")
                        .HasColumnType("int");

                    b.Property<string>("NmXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("OpXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("RoXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("FXmlElementId");

                    b.ToTable("BXmlElement");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.BgrXmlElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("BgrXmlElement");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.CXmlElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CgrXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("CmdXmlElementId")
                        .HasColumnType("int");

                    b.Property<string>("FbuaXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FkXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FtXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("LenXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PbgXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PicXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PntXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PszXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("CmdXmlElementId");

                    b.ToTable("CXmlElement");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.CmdXmlElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("CmdXmlElement");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.DXmlElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FolderDetailsXmlElementId")
                        .HasColumnType("int");

                    b.Property<string>("QtypXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("FolderDetailsXmlElementId");

                    b.ToTable("DXmlElement");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.FXmlElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AliasXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("AprXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("BkgXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("BuaXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ChbXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ColXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("CryXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("DecXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("DfsXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("EdtXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("EmlXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("EwrXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("F4PXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("FieldsXmlElementId")
                        .HasColumnType("int");

                    b.Property<string>("HebXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("HkyXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("IndXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("InpXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("LenXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("LinXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("LnkXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("LvlXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ManXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("MaxXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("MinXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("NumXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("NumvXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("OnlyXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PbgXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PchXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PchlXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PclXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PerXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Pf4XmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PfnXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PhiXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PhtXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PicXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PkvXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PlcXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PntXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PrlXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PslXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PszXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PtpXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PulXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PwdXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PxkXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PxmXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PxnXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PxrXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("QfkXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("RtpXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("SgnXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TabXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TchXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TipXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TypXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ValXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("WdXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("FieldsXmlElementId");

                    b.ToTable("FXmlElement");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.FieldsXmlElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("FieldsXmlElement");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.FolderDetailsXmlElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("FolderDetailsXmlElement");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.FolderXmlElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("FolderXmlElement");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.LXmlElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FclXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("FolderXmlElementId")
                        .HasColumnType("int");

                    b.Property<string>("IcnXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("LkXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("LnXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("LonXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("LtrXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("FolderXmlElementId");

                    b.ToTable("LXmlElement");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.RXmlElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BkgXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FicnXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FtitXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("RclXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("RctBkgXmlElementId")
                        .HasColumnType("int");

                    b.Property<int?>("RctXmlElementId")
                        .HasColumnType("int");

                    b.Property<string>("Rx1XmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Rx2XmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Ry1XmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Ry2XmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("RctBkgXmlElementId");

                    b.HasIndex("RctXmlElementId");

                    b.ToTable("RXmlElement");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.RctBkgXmlElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("RctBkgXmlElement");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.RctXmlElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("RctXmlElement");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.SXmlElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdrXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ArwXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("CliXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("DspaXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("DtkXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("DtrXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FchXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FcmdXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FdspXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FgrXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FilXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FindXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FlangXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FldXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FlibXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FlpXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FlrXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FnnXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FortXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FpcXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FpsXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FsidXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("GrkXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("JacketXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("MsgXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PicXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PlgcXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PntXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PsetXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PxrXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("QendXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("QflxXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("QpxlXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("QstrXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("RecXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("SpoXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("SrgXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("StrcXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("VerXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("WaitXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("WcolXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("WcstXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("WinXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("WlinXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("WlstXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("WsmlXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("SXmlElement");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.ScreenXmlRoot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BgrXmlElementId")
                        .HasColumnType("int");

                    b.Property<int?>("CmdXmlElementId")
                        .HasColumnType("int");

                    b.Property<int?>("FieldsXmlElementId")
                        .HasColumnType("int");

                    b.Property<int?>("FolderDetailsXmlElementId")
                        .HasColumnType("int");

                    b.Property<int?>("FolderXmlElementId")
                        .HasColumnType("int");

                    b.Property<int?>("RctBkgXmlElementId")
                        .HasColumnType("int");

                    b.Property<int?>("RctXmlElementId")
                        .HasColumnType("int");

                    b.Property<int?>("SXmlElementId")
                        .HasColumnType("int");

                    b.Property<int?>("XZonesBkgXmlElementId")
                        .HasColumnType("int");

                    b.Property<int?>("XZonesXmlElementId")
                        .HasColumnType("int");

                    b.Property<int?>("YZonesBkgXmlElementId")
                        .HasColumnType("int");

                    b.Property<int?>("YZonesXmlElementId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BgrXmlElementId");

                    b.HasIndex("CmdXmlElementId");

                    b.HasIndex("FieldsXmlElementId");

                    b.HasIndex("FolderDetailsXmlElementId");

                    b.HasIndex("FolderXmlElementId");

                    b.HasIndex("RctBkgXmlElementId");

                    b.HasIndex("RctXmlElementId");

                    b.HasIndex("SXmlElementId");

                    b.HasIndex("XZonesBkgXmlElementId");

                    b.HasIndex("XZonesXmlElementId");

                    b.HasIndex("YZonesBkgXmlElementId");

                    b.HasIndex("YZonesXmlElementId");

                    b.ToTable("ScreenXmlRoot");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.XXmlElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BkgXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("XZonesBkgXmlElementId")
                        .HasColumnType("int");

                    b.Property<int?>("XZonesXmlElementId")
                        .HasColumnType("int");

                    b.Property<string>("XnXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("XsXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("XZonesBkgXmlElementId");

                    b.HasIndex("XZonesXmlElementId");

                    b.ToTable("XXmlElement");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.XZonesBkgXmlElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("XZonesBkgXmlElement");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.XZonesXmlElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("XZonesXmlElement");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.YXmlElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BkgXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("YZonesBkgXmlElementId")
                        .HasColumnType("int");

                    b.Property<int?>("YZonesXmlElementId")
                        .HasColumnType("int");

                    b.Property<string>("YnXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("YsXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("YtXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("YZonesBkgXmlElementId");

                    b.HasIndex("YZonesXmlElementId");

                    b.ToTable("YXmlElement");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.YZonesBkgXmlElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("YZonesBkgXmlElement");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.YZonesXmlElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("YZonesXmlElement");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.ZXmlElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BgrXmlElementId")
                        .HasColumnType("int");

                    b.Property<string>("ZclXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ZlnXmlAttribute")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("BgrXmlElementId");

                    b.ToTable("ZXmlElement");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.XmlFileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Hash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScreenXmlRootId")
                        .HasColumnType("int");

                    b.Property<string>("SourcePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XmlFileDirectory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XmlFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ScreenXmlRootId");

                    b.ToTable("XmlFiles");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.ArXmlElement", b =>
                {
                    b.HasOne("Comtec.AS400XML.Output.Model.Screen.RctXmlElement", null)
                        .WithMany("ArXmlElementList")
                        .HasForeignKey("RctXmlElementId");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.BXmlElement", b =>
                {
                    b.HasOne("Comtec.AS400XML.Output.Model.Screen.FXmlElement", null)
                        .WithMany("BXmlElementList")
                        .HasForeignKey("FXmlElementId");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.CXmlElement", b =>
                {
                    b.HasOne("Comtec.AS400XML.Output.Model.Screen.CmdXmlElement", null)
                        .WithMany("CXmlElementList")
                        .HasForeignKey("CmdXmlElementId");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.DXmlElement", b =>
                {
                    b.HasOne("Comtec.AS400XML.Output.Model.Screen.FolderDetailsXmlElement", null)
                        .WithMany("DXmlElementList")
                        .HasForeignKey("FolderDetailsXmlElementId");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.FXmlElement", b =>
                {
                    b.HasOne("Comtec.AS400XML.Output.Model.Screen.FieldsXmlElement", null)
                        .WithMany("FXmlElementList")
                        .HasForeignKey("FieldsXmlElementId");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.LXmlElement", b =>
                {
                    b.HasOne("Comtec.AS400XML.Output.Model.Screen.FolderXmlElement", null)
                        .WithMany("LXmlElementList")
                        .HasForeignKey("FolderXmlElementId");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.RXmlElement", b =>
                {
                    b.HasOne("Comtec.AS400XML.Output.Model.Screen.RctBkgXmlElement", null)
                        .WithMany("RXmlElementList")
                        .HasForeignKey("RctBkgXmlElementId");

                    b.HasOne("Comtec.AS400XML.Output.Model.Screen.RctXmlElement", null)
                        .WithMany("RXmlElementList")
                        .HasForeignKey("RctXmlElementId");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.ScreenXmlRoot", b =>
                {
                    b.HasOne("Comtec.AS400XML.Output.Model.Screen.BgrXmlElement", "BgrXmlElement")
                        .WithMany()
                        .HasForeignKey("BgrXmlElementId");

                    b.HasOne("Comtec.AS400XML.Output.Model.Screen.CmdXmlElement", "CmdXmlElement")
                        .WithMany()
                        .HasForeignKey("CmdXmlElementId");

                    b.HasOne("Comtec.AS400XML.Output.Model.Screen.FieldsXmlElement", "FieldsXmlElement")
                        .WithMany()
                        .HasForeignKey("FieldsXmlElementId");

                    b.HasOne("Comtec.AS400XML.Output.Model.Screen.FolderDetailsXmlElement", "FolderDetailsXmlElement")
                        .WithMany()
                        .HasForeignKey("FolderDetailsXmlElementId");

                    b.HasOne("Comtec.AS400XML.Output.Model.Screen.FolderXmlElement", "FolderXmlElement")
                        .WithMany()
                        .HasForeignKey("FolderXmlElementId");

                    b.HasOne("Comtec.AS400XML.Output.Model.Screen.RctBkgXmlElement", "RctBkgXmlElement")
                        .WithMany()
                        .HasForeignKey("RctBkgXmlElementId");

                    b.HasOne("Comtec.AS400XML.Output.Model.Screen.RctXmlElement", "RctXmlElement")
                        .WithMany()
                        .HasForeignKey("RctXmlElementId");

                    b.HasOne("Comtec.AS400XML.Output.Model.Screen.SXmlElement", "SXmlElement")
                        .WithMany()
                        .HasForeignKey("SXmlElementId");

                    b.HasOne("Comtec.AS400XML.Output.Model.Screen.XZonesBkgXmlElement", "XZonesBkgXmlElement")
                        .WithMany()
                        .HasForeignKey("XZonesBkgXmlElementId");

                    b.HasOne("Comtec.AS400XML.Output.Model.Screen.XZonesXmlElement", "XZonesXmlElement")
                        .WithMany()
                        .HasForeignKey("XZonesXmlElementId");

                    b.HasOne("Comtec.AS400XML.Output.Model.Screen.YZonesBkgXmlElement", "YZonesBkgXmlElement")
                        .WithMany()
                        .HasForeignKey("YZonesBkgXmlElementId");

                    b.HasOne("Comtec.AS400XML.Output.Model.Screen.YZonesXmlElement", "YZonesXmlElement")
                        .WithMany()
                        .HasForeignKey("YZonesXmlElementId");

                    b.Navigation("BgrXmlElement");

                    b.Navigation("CmdXmlElement");

                    b.Navigation("FieldsXmlElement");

                    b.Navigation("FolderDetailsXmlElement");

                    b.Navigation("FolderXmlElement");

                    b.Navigation("RctBkgXmlElement");

                    b.Navigation("RctXmlElement");

                    b.Navigation("SXmlElement");

                    b.Navigation("XZonesBkgXmlElement");

                    b.Navigation("XZonesXmlElement");

                    b.Navigation("YZonesBkgXmlElement");

                    b.Navigation("YZonesXmlElement");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.XXmlElement", b =>
                {
                    b.HasOne("Comtec.AS400XML.Output.Model.Screen.XZonesBkgXmlElement", null)
                        .WithMany("XXmlElementList")
                        .HasForeignKey("XZonesBkgXmlElementId");

                    b.HasOne("Comtec.AS400XML.Output.Model.Screen.XZonesXmlElement", null)
                        .WithMany("XXmlElementList")
                        .HasForeignKey("XZonesXmlElementId");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.YXmlElement", b =>
                {
                    b.HasOne("Comtec.AS400XML.Output.Model.Screen.YZonesBkgXmlElement", null)
                        .WithMany("YXmlElementList")
                        .HasForeignKey("YZonesBkgXmlElementId");

                    b.HasOne("Comtec.AS400XML.Output.Model.Screen.YZonesXmlElement", null)
                        .WithMany("YXmlElementList")
                        .HasForeignKey("YZonesXmlElementId");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.ZXmlElement", b =>
                {
                    b.HasOne("Comtec.AS400XML.Output.Model.Screen.BgrXmlElement", null)
                        .WithMany("ZXmlElementList")
                        .HasForeignKey("BgrXmlElementId");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.XmlFileModel", b =>
                {
                    b.HasOne("Comtec.AS400XML.Output.Model.Screen.ScreenXmlRoot", "ScreenXmlRoot")
                        .WithMany()
                        .HasForeignKey("ScreenXmlRootId");

                    b.Navigation("ScreenXmlRoot");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.BgrXmlElement", b =>
                {
                    b.Navigation("ZXmlElementList");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.CmdXmlElement", b =>
                {
                    b.Navigation("CXmlElementList");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.FXmlElement", b =>
                {
                    b.Navigation("BXmlElementList");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.FieldsXmlElement", b =>
                {
                    b.Navigation("FXmlElementList");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.FolderDetailsXmlElement", b =>
                {
                    b.Navigation("DXmlElementList");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.FolderXmlElement", b =>
                {
                    b.Navigation("LXmlElementList");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.RctBkgXmlElement", b =>
                {
                    b.Navigation("RXmlElementList");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.RctXmlElement", b =>
                {
                    b.Navigation("ArXmlElementList");

                    b.Navigation("RXmlElementList");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.XZonesBkgXmlElement", b =>
                {
                    b.Navigation("XXmlElementList");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.XZonesXmlElement", b =>
                {
                    b.Navigation("XXmlElementList");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.YZonesBkgXmlElement", b =>
                {
                    b.Navigation("YXmlElementList");
                });

            modelBuilder.Entity("Comtec.AS400XML.Output.Model.Screen.YZonesXmlElement", b =>
                {
                    b.Navigation("YXmlElementList");
                });
#pragma warning restore 612, 618
        }
    }
}
