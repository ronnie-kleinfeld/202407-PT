//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DDSWeb.DspWsServer {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://comtec.co.il/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback As400OperationCompleted;
        
        private System.Threading.SendOrPostCallback ResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearMqOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::DDSWeb.Properties.Settings.Default.DDSWeb_DspWsServer_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event As400CompletedEventHandler As400Completed;
        
        /// <remarks/>
        public event ResultCompletedEventHandler ResultCompleted;
        
        /// <remarks/>
        public event ClearMqCompletedEventHandler ClearMqCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://comtec.co.il/As400", RequestNamespace="http://comtec.co.il/", ResponseNamespace="http://comtec.co.il/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string As400(string sCheckCode, string sSystem, string sUser, string sPass) {
            object[] results = this.Invoke("As400", new object[] {
                        sCheckCode,
                        sSystem,
                        sUser,
                        sPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void As400Async(string sCheckCode, string sSystem, string sUser, string sPass) {
            this.As400Async(sCheckCode, sSystem, sUser, sPass, null);
        }
        
        /// <remarks/>
        public void As400Async(string sCheckCode, string sSystem, string sUser, string sPass, object userState) {
            if ((this.As400OperationCompleted == null)) {
                this.As400OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAs400OperationCompleted);
            }
            this.InvokeAsync("As400", new object[] {
                        sCheckCode,
                        sSystem,
                        sUser,
                        sPass}, this.As400OperationCompleted, userState);
        }
        
        private void OnAs400OperationCompleted(object arg) {
            if ((this.As400Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.As400Completed(this, new As400CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://comtec.co.il/Result", RequestNamespace="http://comtec.co.il/", ResponseNamespace="http://comtec.co.il/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Result() {
            object[] results = this.Invoke("Result", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResultAsync() {
            this.ResultAsync(null);
        }
        
        /// <remarks/>
        public void ResultAsync(object userState) {
            if ((this.ResultOperationCompleted == null)) {
                this.ResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResultOperationCompleted);
            }
            this.InvokeAsync("Result", new object[0], this.ResultOperationCompleted, userState);
        }
        
        private void OnResultOperationCompleted(object arg) {
            if ((this.ResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResultCompleted(this, new ResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://comtec.co.il/ClearMq", RequestNamespace="http://comtec.co.il/", ResponseNamespace="http://comtec.co.il/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ClearMq(string sCheckCode, string sComputer, string sMask, int nDaysToSave) {
            object[] results = this.Invoke("ClearMq", new object[] {
                        sCheckCode,
                        sComputer,
                        sMask,
                        nDaysToSave});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ClearMqAsync(string sCheckCode, string sComputer, string sMask, int nDaysToSave) {
            this.ClearMqAsync(sCheckCode, sComputer, sMask, nDaysToSave, null);
        }
        
        /// <remarks/>
        public void ClearMqAsync(string sCheckCode, string sComputer, string sMask, int nDaysToSave, object userState) {
            if ((this.ClearMqOperationCompleted == null)) {
                this.ClearMqOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearMqOperationCompleted);
            }
            this.InvokeAsync("ClearMq", new object[] {
                        sCheckCode,
                        sComputer,
                        sMask,
                        nDaysToSave}, this.ClearMqOperationCompleted, userState);
        }
        
        private void OnClearMqOperationCompleted(object arg) {
            if ((this.ClearMqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearMqCompleted(this, new ClearMqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void As400CompletedEventHandler(object sender, As400CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class As400CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal As400CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ResultCompletedEventHandler(object sender, ResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ClearMqCompletedEventHandler(object sender, ClearMqCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClearMqCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClearMqCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591